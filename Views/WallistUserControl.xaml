<UserControl x:Class="GoCarlos.NET.Views.WallistUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GoCarlos.NET.Views"
             xmlns:viewModels="clr-namespace:GoCarlos.NET.ViewModels"
             xmlns:enums="clr-namespace:GoCarlos.NET.Models.Enums"
             d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <FrameworkElement x:Name="dummyElement" DataContext="{Binding}"  Visibility="Collapsed"/>
        <DataGrid x:Name="WallList"
                ItemsSource="{Binding PlayerData, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                HorizontalAlignment="Left"
                AutoGenerateColumns="False"
                CanUserSortColumns="True"
                CanUserAddRows="False"
                SelectedItem="{Binding SelectedPlayer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectionMode="Single"
                SelectionUnit="FullRow"
                IsReadOnly="True"
                MouseUp="DataGrid_MouseUp">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem IsEnabled="False">
                        <MenuItem.Header>
                            <TextBlock>
                                <Bold><Run Text="{Binding SelectedPlayer.FullName, Mode=OneWay}"/></Bold>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Upraviť hráča"
                            Command="{Binding EditSelectedPlayerCommand}"
                            IsEnabled="True"/>
                    <MenuItem Header="Odstrániť hráča"
                            Command="{Binding DeleteSelectedPlayerCommand}"
                            Visibility="{Binding IsSuitableToDelete, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Poradie" Binding="{Binding Place, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Meno" Binding="{Binding FullName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Klub" Binding="{Binding Club, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Trieda" Binding="{Binding Grade, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Rating" Binding="{Binding Gor, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="" CanUserResize="False" MinWidth="12" Width="12">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding GroupColor}" Value="{x:Static enums:Group.SuperGroup}">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding GroupColor}" Value="{x:Static enums:Group.TopGroup}">
                                    <Setter Property="Background" Value="Blue"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseDown"/>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="1"
                        Binding="{Binding R1, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="2"
                        Binding="{Binding R2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding DataContext.R2V, Source={x:Reference dummyElement}, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="3"
                        Binding="{Binding R3, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding DataContext.R3V, Source={x:Reference dummyElement}, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="4" 
                        Binding="{Binding R4, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding DataContext.R4V, Source={x:Reference dummyElement}, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="5" 
                        Binding="{Binding R5, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding DataContext.R5V, Source={x:Reference dummyElement}, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="6" 
                        Binding="{Binding R6, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding DataContext.R6V, Source={x:Reference dummyElement}, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="7" 
                        Binding="{Binding R7, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding DataContext.R7V, Source={x:Reference dummyElement}, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="8" 
                        Binding="{Binding R8, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding DataContext.R8V, Source={x:Reference dummyElement}, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="9" 
                        Binding="{Binding R9, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding DataContext.R9V, Source={x:Reference dummyElement}, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="10" 
                        Binding="{Binding R10, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding DataContext.R10V, Source={x:Reference dummyElement}, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Bi" Binding="{Binding NrW, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Pb" Binding="{Binding PairingBalancer, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Body" Binding="{Binding Points, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="MMX" Binding="{Binding ScoreX, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="MM" Binding="{Binding Score, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="SODOS" Binding="{Binding SODOS, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="SOS" Binding="{Binding SOS, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="SOSOS" Binding="{Binding SOSOS, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
